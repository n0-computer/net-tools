var searchIndex = new Map(JSON.parse('[["netwatch",{"t":"GFPPNNNNNNNNNNNNNNNNNNNNNNNNCNNCNNNNNNCNNNNNNNNNNNNNNNNFFFGFPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNOOOOONNNNNONNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNHONONNNNPFPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["IpFamily","UdpSocket","V4","V6","bind","bind_full","bind_local","bind_local_v4","bind_local_v6","bind_v4","bind_v6","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","close","connect","drop","eq","fmt","","from","","","gro_segments","interfaces","into","","ip","is_broken","is_closed","local_addr","","max_gso_segments","may_fragment","netmon","poll_recv_quinn","poll_writable","rebind","recv","recv_from","send","send_to","to_owned","try_from","","try_into","","try_send_quinn","type_id","","unspecified_addr","DefaultRouteDetails","HomeRouter","Interface","IpNet","State","V4","V6","addr","addrs","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","default_route_interface","eq","","","fake","fmt","","","","","","","from","","","","","gateway","have_v4","have_v6","interface_name","interfaces","into","","","","","my_ip","new","","","to_owned","","","to_string","","try_from","","","","","try_into","","","","","type_id","","","","","LocalAddresses","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","eq","fmt","from","into","is_unicast_link_local","loopback","new","regular","to_owned","try_from","try_into","type_id","Actor","CallbackToken","ChannelClosed","Error","Monitor","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","eq","fmt","","","","from","","","","","hash","into","","","network_change","new","source","subscribe","to_owned","to_string","try_from","","","try_into","","","type_id","","","unsubscribe"],"q":[[0,"netwatch"],[55,"netwatch::interfaces"],[134,"netwatch::ip"],[153,"netwatch::netmon"],[197,"netwatch::ip_family"],[198,"netwatch::udp"],[199,"std::io::error"],[200,"core::net::socket_addr"],[201,"core::convert"],[202,"core::fmt"],[203,"core::net::ip_addr"],[204,"core::task::wake"],[205,"std::io"],[206,"iroh_quinn_udp"],[207,"core::task::poll"],[208,"core::result"],[209,"core::any"],[210,"core::iter::traits::iterator"],[211,"alloc::string"],[212,"core::option"],[213,"netwatch::netmon::actor"],[214,"tokio::sync::mpsc::error"],[215,"tokio::sync::oneshot::error"],[216,"core::hash"],[217,"core::error"],[218,"futures_lite::future"],[219,"core::ops::function"],[220,"core::marker"]],"i":"``b0f00000010101110001101100`10`001000`0000000110100101`````C`00Cb01D`ChCj34210410410410`34223342210342100221234210021041032342103421034210`Db000000000`0000000Dj`0``DfDh2102111110221022211020020121021021020","f":"````{{bd}{{h{f}}}}{c{{h{f}}}{{l{j}}}}1{d{{h{f}}}}000{n{{n{c}}}{}}0{{{n{A`}}}{{n{A`c}}}{}}0{{{n{b}}}b}{{n{n{A`c}}}Ab{}}{{nAd}Ab}{{{n{f}}}Ab}{{{n{f}}j}{{h{Ab}}}}{{{n{A`f}}}Ab}{{{n{b}}{n{b}}}Af}{{{n{b}}{n{A`Ah}}}Aj}{{{n{f}}{n{A`Ah}}}Aj}{cc{}}{Alb}1{{{n{f}}}An}`{{}c{}}0`{{{n{f}}}Af}0{{{n{b}}}Al}{{{n{f}}}{{h{j}}}}42`{{{n{f}}{n{A`B`}}{n{A`{Bd{Bb}}}}{n{A`{Bd{Bf}}}}}{{Bh{{h{An}}}}}}{{{n{f}}{n{A`B`}}}{{Bh{{h{Ab}}}}}}{{{n{f}}}{{h{Ab}}}}````{nc{}}{c{{Bj{e}}}{}{}}0{{}{{Bj{c}}}{}}0{{{n{f}}{n{Bl}}}{{h{Ab}}}}{nBn}09```````{{{n{C`}}}Al}{{{n{Cb}}}{{`{{Cf{}{{Cd{C`}}}}}}}}{n{{n{c}}}{}}0000{{{n{A`}}}{{n{A`c}}}{}}0000{{{n{C`}}}C`}{{{n{Ch}}}Ch}{{{n{Cj}}}Cj}{{n{n{A`c}}}Ab{}}00{{nAd}Ab}00{{}{{Cn{Cl}}}}{{{n{Cb}}{n{Cb}}}Af}{{{n{C`}}{n{C`}}}Af}{{{n{D`}}{n{D`}}}Af}{{}D`}{{{n{Cb}}{n{A`Ah}}}Aj}0{{{n{C`}}{n{A`Ah}}}Aj}{{{n{D`}}{n{A`Ah}}}Aj}0{{{n{Ch}}{n{A`Ah}}}Aj}{{{n{Cj}}{n{A`Ah}}}Aj}{cc{}}0000`````{{}c{}}0000`7{{}{{Cn{Ch}}}}{{}{{Cn{Cj}}}}{nc{}}00{nCl}0{c{{Bj{e}}}{}{}}0000{{}{{Bj{c}}}{}}0000{nBn}0000`{n{{n{c}}}{}}{{{n{A`}}}{{n{A`c}}}{}}{{{n{Db}}}Db}{{n{n{A`c}}}Ab{}}{{nAd}Ab}{{}Db}{{{n{Db}}{n{Db}}}Af}{{{n{Db}}{n{A`Ah}}}Aj}{cc{}}{{}c{}}{DdAf}`5`?=<;`````:::999{{{n{Df}}}Df}87{{{n{Df}}{n{Df}}}Af}{{{n{Df}}{n{A`Ah}}}Aj}{{{n{Dh}}{n{A`Ah}}}Aj}{{{n{Dj}}{n{A`Ah}}}Aj}077{{{Dl{c}}}Dj{}}{DnDj}9{{{n{Df}}{n{A`c}}}AbE`}999{{{n{Dh}}}{{Bj{AbDj}}}}{{}{{Bj{DhDj}}}}{{{n{Dj}}}{{Cn{{n{Eb}}}}}}{{{n{Dh}}c}{{Bj{DfDj}}}{{Eh{Af}{{Ed{{Ef{Ab}}}}}}EjEl}}{nc{}}{nCl}{c{{Bj{e}}}{}{}}00{{}{{Bj{c}}}{}}00{nBn}00{{{n{Dh}}Df}{{Bj{AbDj}}}}","D":"Jl","p":[[6,"IpFamily",0,197],[1,"u16"],[5,"UdpSocket",0,198],[8,"Result",199],[6,"SocketAddr",200],[10,"Into",201],[1,"reference",null,null,1],[0,"mut"],[1,"unit"],[1,"u8"],[1,"bool"],[5,"Formatter",202],[8,"Result",202],[6,"IpAddr",203],[1,"usize"],[5,"Context",204],[5,"IoSliceMut",205],[1,"slice"],[5,"RecvMeta",206],[6,"Poll",207],[6,"Result",208,null,1],[5,"Transmit",206],[5,"TypeId",209],[6,"IpNet",55],[5,"Interface",55],[17,"Item"],[10,"Iterator",210],[5,"DefaultRouteDetails",55],[5,"HomeRouter",55],[5,"String",211],[6,"Option",212,null,1],[5,"State",55],[5,"LocalAddresses",134],[5,"Ipv6Addr",203],[5,"CallbackToken",153,213],[5,"Monitor",153],[6,"Error",153],[5,"SendError",214],[5,"RecvError",215],[10,"Hasher",216],[10,"Error",217],[17,"Output"],[8,"Boxed",218],[10,"Fn",219],[10,"Sync",220],[10,"Send",220]],"r":[[0,197],[1,198],[154,213]],"b":[[88,"impl-Debug-for-Interface"],[89,"impl-Display-for-Interface"],[91,"impl-Display-for-State"],[92,"impl-Debug-for-State"],[170,"impl-Display-for-Error"],[171,"impl-Debug-for-Error"],[174,"impl-From%3CSendError%3CT%3E%3E-for-Error"],[175,"impl-From%3CRecvError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAG8AEQAMAAYAFQADABoAAAAvAAQANQABAEEAEgBVAAIAWQAGAHMAEwCIAAcAlgAEAJwAAQCfAA0ArwABALIAAAC4AAAAugAKAA==","P":[[5,""],[6,""],[11,"T"],[15,""],[16,"T"],[17,""],[24,"T"],[25,""],[26,"T"],[27,""],[29,"U"],[32,""],[46,"T"],[47,"U,T"],[49,"U"],[51,""],[64,"T"],[74,""],[77,"T"],[80,""],[95,"T"],[105,"U"],[111,""],[114,"T"],[117,""],[119,"U,T"],[124,"U"],[129,""],[135,"T"],[137,""],[138,"T"],[139,""],[143,"T"],[144,"U"],[145,""],[149,"T"],[150,"U,T"],[151,"U"],[152,""],[158,"T"],[164,""],[165,"T"],[166,""],[172,"T"],[175,""],[176,"T"],[177,"__H"],[178,"U"],[181,""],[184,"F"],[185,"T"],[186,""],[187,"U,T"],[190,"U"],[193,""]]}],["portmapper",{"t":"PPFFPPFPGFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNONNNNNNNNNNNNNNNNNNNNNNNOOONNONOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNOO","n":["ChannelClosed","ChannelFull","Client","Config","Ipv6Gateway","Join","Metrics","NoGateway","ProbeError","ProbeOutput","Service","all_available","as_iterable","borrow","","","","","","borrow_mut","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","deactivate","default","","","enable_nat_pmp","enable_pcp","enable_upnp","eq","equivalent","","","external_address_updated","field_count","field_ref","fmt","","","","","","","","from","","","","","","","into","","","","","","local_port_updates","mapping_attempts","mapping_failures","metrics","name","nat_pmp","new","pcp","pcp_available","pcp_probes","probe","probes_started","procure_mapping","to_owned","","","","","to_string","","try_from","","","","","","try_into","","","","","","type_id","","","","","","update_local_port","upnp","upnp_available","upnp_gateway_updated","upnp_probes","upnp_probes_failed","vzip","","","","","","watch_external_address","with_metrics","is_cancelled","is_panic"],"q":[[0,"portmapper"],[127,"portmapper::ProbeError"],[129,"iroh_metrics::iterable"],[130,"portmapper::metrics"],[131,"iroh_metrics::metrics"],[132,"core::option"],[133,"core::fmt"],[134,"tokio::runtime::task::error"],[135,"alloc::sync"],[136,"core::result"],[137,"tokio::sync::oneshot"],[138,"alloc::string"],[139,"core::any"],[140,"core::num::nonzero"],[141,"core::net::socket_addr"],[142,"tokio::sync::watch"]],"i":"n0``00`0```bl012A`AbBf345210345213452134521132122244443333445521034552103452103331341433131345214534521034521034521014333334521011Cj0","f":"```````````{{{d{b}}}f}{d{{d{h}}}}{d{{d{c}}}{}}00000{{{d{j}}}{{d{jc}}}{}}00000{{{d{l}}}l}{{{d{b}}}b}{{{d{n}}}n}{{{d{A`}}}A`}{{{d{Ab}}}Ab}{{d{d{jc}}}Ad{}}0000{{dAf}Ad}0000{{{d{Ab}}}Ad}{{}l}{{}A`}{{}Ab}```{{{d{b}}{d{b}}}f}{{d{d{c}}}f{}}00`{{{d{l}}}Ah}{{{d{l}}Ah}{{B`{{An{{d{Aj}}{d{Al}}}}}}}}{{{d{l}}{d{jBb}}}Bd}{{{d{b}}{d{jBb}}}Bd}0{{{d{n}}{d{jBb}}}Bd}0{{{d{A`}}{d{jBb}}}Bd}{{{d{Ab}}{d{jBb}}}Bd}{{{d{Bf}}{d{jBb}}}Bd}{cc{}}00{Bhn}111{{}c{}}00000```{{{d{Ab}}}{{d{{Bj{l}}}}}}{{{d{l}}}{{d{Aj}}}}`{A`Ab}```{{{d{Ab}}}{{Bn{{Bl{bn}}}}}}`{{{d{Ab}}}Ad}{dc{}}0000{dC`}0{c{{Bl{e}}}{}{}}00000{{}{{Bl{c}}}{}}00000{dCb}00000{{{d{Ab}}Cd}Ad}`````{{}c{}}00000{{{d{Ab}}}{{Ch{{B`{Cf}}}}}}{{A`{Bj{l}}}Ab}``","D":"Ej","p":[[5,"ProbeOutput",0],[1,"reference",null,null,1],[1,"bool"],[10,"Iterable",129],[0,"mut"],[5,"Metrics",0,130],[6,"ProbeError",0],[5,"Config",0],[5,"Client",0],[1,"unit"],[1,"u8"],[1,"usize"],[1,"str"],[10,"Metric",131],[1,"tuple",null,null,1],[6,"Option",132,null,1],[5,"Formatter",133],[8,"Result",133],[5,"Service",0],[5,"JoinError",134],[5,"Arc",135,null,1],[6,"Result",136,null,1],[5,"Receiver",137],[5,"String",138],[5,"TypeId",139],[8,"NonZeroU16",140],[5,"SocketAddrV4",141],[5,"Receiver",142],[15,"Join",127]],"r":[[6,130]],"b":[[55,"impl-Debug-for-ProbeOutput"],[56,"impl-Display-for-ProbeOutput"],[57,"impl-Debug-for-ProbeError"],[58,"impl-Display-for-ProbeError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFQADQABAAEABQABAAgAAQANABsAKgAAACwAAAAwAAMANQAJAEIAAABQAAAAWQAYAHgABQCAAAEA","P":[[13,"T"],[25,""],[30,"T"],[35,""],[48,"K"],[52,""],[62,"T"],[65,""],[66,"T"],[69,"U"],[78,""],[88,"T"],[93,""],[95,"U,T"],[101,"U"],[107,""],[119,"V"],[125,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[5962,3350]}