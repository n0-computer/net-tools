var searchIndex = new Map(JSON.parse('[["netwatch",{"t":"GFPPNNNNNNNNNNNNNNNNNNNNNNNNCNNCNNNNNNCNNNNNNNNNNNNNNNNFFFGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNNNOOOOOONNNNNONNONNNNONNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNHONONNNNPPGFENNNNNNNNNNNNNNNNNNNNNNNNNNNNOOO","n":["IpFamily","UdpSocket","V4","V6","bind","bind_full","bind_local","bind_local_v4","bind_local_v6","bind_v4","bind_v6","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","close","connect","drop","eq","fmt","","from","","","gro_segments","interfaces","into","","ip","is_broken","is_closed","local_addr","","max_gso_segments","may_fragment","netmon","poll_recv_quinn","poll_writable","rebind","recv","recv_from","send","send_to","to_owned","try_from","","try_into","","try_send_quinn","type_id","","unspecified_addr","DefaultRouteDetails","HomeRouter","Interface","IpNet","State","V4","V6","addr","addrs","borrow","","","","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","default_route_interface","","eq","","","fake","fmt","","","","","","","from","","","","","gateway","have_v4","have_v6","http_proxy","interface_name","interfaces","into","","","","","is_expensive","is_major_change","is_up","my_ip","name","new","","","pac","to_owned","","","","","to_string","","try_from","","","","","try_into","","","","","type_id","","","","","LocalAddresses","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","eq","fmt","from","into","is_unicast_link_local","loopback","new","regular","to_owned","try_from","try_into","type_id","Actor","ChannelClosed","Error","Monitor","State","as_error_source","backtrace","borrow","","borrow_mut","","cause","description","fmt","","","from","","","","into","","network_change","new","source","subscribe","to_string","try_from","","try_into","","type_id","","backtrace","","source"],"q":[[0,"netwatch"],[55,"netwatch::interfaces"],[149,"netwatch::ip"],[168,"netwatch::netmon"],[201,"netwatch::netmon::Error"],[204,"netwatch::ip_family"],[205,"netwatch::udp"],[206,"std::io::error"],[207,"core::net::socket_addr"],[208,"core::convert"],[209,"core::fmt"],[210,"core::net::ip_addr"],[211,"core::task::wake"],[212,"std::io"],[213,"iroh_quinn_udp"],[214,"core::task::poll"],[215,"core::result"],[216,"core::any"],[217,"core::iter::traits::iterator"],[218,"alloc::string"],[219,"core::option"],[220,"core::error"],[221,"std::backtrace"],[222,"tokio::sync::oneshot::error"],[223,"tokio::sync::mpsc::error"],[224,"n0_watcher"]],"i":"``b0f00000010101110001101100`10`001000`0000000110100101`````C`00Cb01ChCjCl34210342103421034210`23422334221034210022212342102230321023421032342103421034210`Dd000000000`0000000Dj0```00Dn1011101101110100101010101EfEh0","f":"````{{bd}{{h{f}}}}{c{{h{f}}}{{l{j}}}}1{d{{h{f}}}}000{n{{n{c}}}{}}0{{{n{A`}}}{{n{A`c}}}{}}0{{{n{b}}}b}{{n{n{A`c}}}Ab{}}{{nAd}Ab}{{{n{f}}}Ab}{{{n{f}}j}{{h{Ab}}}}{{{n{A`f}}}Ab}{{{n{b}}{n{b}}}Af}{{{n{b}}{n{A`Ah}}}Aj}{{{n{f}}{n{A`Ah}}}Aj}{Alb}{cc{}}0{{{n{f}}}An}`{{}c{}}0`{{{n{f}}}Af}0{{{n{b}}}Al}{{{n{f}}}{{h{j}}}}42`{{{n{f}}{n{A`B`}}{n{A`{Bd{Bb}}}}{n{A`{Bd{Bf}}}}}{{Bh{{h{An}}}}}}{{{n{f}}{n{A`B`}}}{{Bh{{h{Ab}}}}}}{{{n{f}}}{{h{Ab}}}}````{nc{}}{c{{Bj{e}}}{}{}}0{{}{{Bj{c}}}{}}0{{{n{f}}{n{Bl}}}{{h{Ab}}}}{nBn}09```````{{{n{C`}}}Al}{{{n{Cb}}}{{`{{Cf{}{{Cd{C`}}}}}}}}{n{{n{c}}}{}}0000{{{n{A`}}}{{n{A`c}}}{}}0000{{{n{Cb}}}Cb}{{{n{C`}}}C`}{{{n{Ch}}}Ch}{{{n{Cj}}}Cj}{{{n{Cl}}}Cl}{{n{n{A`c}}}Ab{}}0000{{nAd}Ab}0000{{}{{D`{Cn}}}}`{{{n{Cb}}{n{Cb}}}Af}{{{n{C`}}{n{C`}}}Af}{{{n{Ch}}{n{Ch}}}Af}{{}Ch}{{{n{Cb}}{n{A`Ah}}}Aj}0{{{n{C`}}{n{A`Ah}}}Aj}{{{n{Ch}}{n{A`Ah}}}Aj}0{{{n{Cj}}{n{A`Ah}}}Aj}{{{n{Cl}}{n{A`Ah}}}Aj}{cc{}}0000``````{{}c{}}0000`8{{{n{Cb}}}Af}`{{{n{Cb}}}{{n{Db}}}}9{{}{{D`{Cj}}}}{{}{{D`{Cl}}}}`{nc{}}0000{nCn}0{c{{Bj{e}}}{}{}}0000{{}{{Bj{c}}}{}}0000{nBn}0000`{n{{n{c}}}{}}{{{n{A`}}}{{n{A`c}}}{}}{{{n{Dd}}}Dd}{{n{n{A`c}}}Ab{}}{{nAd}Ab}{{}Dd}{{{n{Dd}}{n{Dd}}}Af}{{{n{Dd}}{n{A`Ah}}}Aj}{cc{}}{{}c{}}{DfAf}`5`?=<;`````{n{{n{Dh}}}}{{{n{Dj}}}{{D`{{n{Dl}}}}}}<<;;{{{n{Dj}}}{{D`{{n{Dh}}}}}}{{{n{Dj}}}{{n{Db}}}}{{{n{Dn}}{n{A`Ah}}}Aj}{{{n{Dj}}{n{A`Ah}}}Aj}088{E`Dj}{{{Eb{c}}}Dj{}}99{{{n{Dn}}}{{Bj{AbDj}}}}{{}{{Bj{DnDj}}}}7{{{n{Dn}}}{{Ed{Ch}}}}{nCn}{c{{Bj{e}}}{}{}}0{{}{{Bj{c}}}{}}0{nBn}0```","D":"Kb","p":[[6,"IpFamily",0,204],[1,"u16"],[5,"UdpSocket",0,205],[8,"Result",206],[6,"SocketAddr",207],[10,"Into",208],[1,"reference",null,null,1],[0,"mut"],[1,"unit"],[1,"u8"],[1,"bool"],[5,"Formatter",209],[8,"Result",209],[6,"IpAddr",210],[1,"usize"],[5,"Context",211],[5,"IoSliceMut",212],[1,"slice"],[5,"RecvMeta",213],[6,"Poll",214],[6,"Result",215,null,1],[5,"Transmit",213],[5,"TypeId",216],[6,"IpNet",55],[5,"Interface",55],[17,"Item"],[10,"Iterator",217],[5,"State",55],[5,"DefaultRouteDetails",55],[5,"HomeRouter",55],[5,"String",218],[6,"Option",219,null,1],[1,"str"],[5,"LocalAddresses",149],[5,"Ipv6Addr",210],[10,"Error",220],[6,"Error",168],[5,"Backtrace",221],[5,"Monitor",168],[5,"RecvError",222],[5,"SendError",223],[5,"Direct",224],[15,"ChannelClosed",201],[15,"Actor",201]],"r":[[0,204],[1,205],[172,55]],"b":[[95,"impl-Display-for-Interface"],[96,"impl-Debug-for-Interface"],[98,"impl-Display-for-State"],[99,"impl-Debug-for-State"],[182,"impl-Display-for-Error"],[183,"impl-Debug-for-Error"],[186,"impl-From%3CRecvError%3E-for-Error"],[187,"impl-From%3CSendError%3CT%3E%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHMADgAMAAYAFQAEAC8ABAA1AAEAQQAYAFwAAgBgAAYAgAAVAJcABwClAAYArQALALsAAQDBAAAAwwAJAA==","P":[[5,""],[6,""],[11,"T"],[15,""],[16,"T"],[17,""],[25,"T"],[27,""],[29,"U"],[32,""],[46,"T"],[47,"U,T"],[49,"U"],[51,""],[64,"T"],[74,""],[79,"T"],[84,""],[102,"T"],[113,"U"],[119,""],[127,"T"],[132,""],[134,"U,T"],[139,"U"],[144,""],[150,"T"],[152,""],[153,"T"],[154,""],[158,"T"],[159,"U"],[160,""],[164,"T"],[165,"U,T"],[166,"U"],[167,""],[175,"T"],[179,""],[184,"T"],[186,""],[187,"T"],[188,"U"],[190,""],[195,"U,T"],[197,"U"],[199,""]]}],["portmapper",{"t":"PPFFPPFPGFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNONNNNNNNNNNNNNNNNNNNNNNOOONNONOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNOO","n":["ChannelClosed","ChannelFull","Client","Config","Ipv6Gateway","Join","Metrics","NoGateway","ProbeError","ProbeOutput","Service","all_available","as_error_source","as_iterable","backtrace","borrow","","","","","","borrow_mut","","","","","","cause","clone","","","","clone_into","","","","clone_to_uninit","","","","deactivate","default","","","description","deserialize","enable_nat_pmp","enable_pcp","enable_upnp","eq","equivalent","","","external_address_updated","field_count","field_ref","fmt","","","","","","","","from","","","","","","into","","","","","","local_port_updates","mapping_attempts","mapping_failures","metrics","name","nat_pmp","new","pcp","pcp_available","pcp_probes","probe","probes_started","procure_mapping","serialize","source","to_owned","","","","to_string","","try_from","","","","","","try_into","","","","","","type_id","","","","","","update_local_port","upnp","upnp_available","upnp_gateway_updated","upnp_probes","upnp_probes_failed","vzip","","","","","","watch_external_address","with_metrics","is_cancelled","is_panic"],"q":[[0,"portmapper"],[129,"portmapper::ProbeError"],[131,"core::error"],[132,"iroh_metrics::iterable"],[133,"std::backtrace"],[134,"core::option"],[135,"portmapper::metrics"],[136,"core::result"],[137,"serde::de"],[138,"iroh_metrics::base"],[139,"core::fmt"],[140,"alloc::sync"],[141,"tokio::sync::oneshot"],[142,"serde::ser"],[143,"alloc::string"],[144,"core::any"],[145,"core::num::nonzero"],[146,"core::net::socket_addr"],[147,"tokio::sync::watch"]],"i":"l0``00`0```b1Al2012AdAfBl345210545214521452113215322244443333445521034521034521033313414331313545214534521034521034521014333334521011Cn0","f":"```````````{{{d{b}}}f}{d{{d{h}}}}{d{{d{j}}}}{{{d{l}}}{{A`{{d{n}}}}}}{d{{d{c}}}{}}00000{{{d{Ab}}}{{d{Abc}}}{}}00000{{{d{l}}}{{A`{{d{h}}}}}}{{{d{b}}}b}{{{d{l}}}l}{{{d{Ad}}}Ad}{{{d{Af}}}Af}{{d{d{Abc}}}Ah{}}000{{dAj}Ah}000{{{d{Af}}}Ah}{{}Al}{{}Ad}{{}Af}{{{d{l}}}{{d{An}}}}{c{{B`{Al}}}Bb}```{{{d{b}}{d{b}}}f}{{d{d{c}}}f{}}00`{{{d{Al}}}Bd}{{{d{Al}}Bd}{{A`{Bf}}}}{{{d{Al}}{d{AbBh}}}Bj}{{{d{b}}{d{AbBh}}}Bj}0{{{d{l}}{d{AbBh}}}Bj}0{{{d{Ad}}{d{AbBh}}}Bj}{{{d{Af}}{d{AbBh}}}Bj}{{{d{Bl}}{d{AbBh}}}Bj}{cc{}}00000{{}c{}}00000```{{{d{Af}}}{{d{{Bn{Al}}}}}}{{{d{Al}}}{{d{An}}}}`{AdAf}```{{{d{Af}}}{{C`{{B`{bl}}}}}}`{{{d{Af}}}Ah}{{{d{Al}}c}B`Cb}{{{d{l}}}{{A`{{d{h}}}}}}{dc{}}000{dCd}0{c{{B`{e}}}{}{}}00000{{}{{B`{c}}}{}}00000{dCf}00000{{{d{Af}}Ch}Ah}`````{{}c{}}00000{{{d{Af}}}{{Cl{{A`{Cj}}}}}}{{Ad{Bn{Al}}}Af}``","D":"Ej","p":[[5,"ProbeOutput",0],[1,"reference",null,null,1],[1,"bool"],[10,"Error",131],[10,"Iterable",132],[6,"ProbeError",0],[5,"Backtrace",133],[6,"Option",134,null,1],[0,"mut"],[5,"Config",0],[5,"Client",0],[1,"unit"],[1,"u8"],[5,"Metrics",0,135],[1,"str"],[6,"Result",136,null,1],[10,"Deserializer",137],[1,"usize"],[5,"MetricItem",138],[5,"Formatter",139],[8,"Result",139],[5,"Service",0],[5,"Arc",140,null,1],[5,"Receiver",141],[10,"Serializer",142],[5,"String",143],[5,"TypeId",144],[8,"NonZeroU16",145],[5,"SocketAddrV4",146],[5,"Receiver",147],[15,"Join",129]],"r":[[6,135]],"b":[[57,"impl-Display-for-ProbeOutput"],[58,"impl-Debug-for-ProbeOutput"],[59,"impl-Display-for-ProbeError"],[60,"impl-Debug-for-ProbeError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFYADAABAAEABQABAAgAAQANABsAKgAAACwAAgAyAAMANwAJAFEAAABaABkAegAFAIIAAQA=","P":[[15,"T"],[27,""],[32,"T"],[36,""],[45,"__D"],[49,""],[50,"K"],[54,""],[64,"T"],[70,"U"],[79,""],[89,"__S"],[90,""],[91,"T"],[95,""],[97,"U,T"],[103,"U"],[109,""],[121,"V"],[127,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[5839,3639]}